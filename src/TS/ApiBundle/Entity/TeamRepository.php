<?php

namespace TS\ApiBundle\Entity;

use Doctrine\ORM\EntityRepository;

use TS\ApiBundle\Entity\Player;

/**
 * TeamRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TeamRepository extends EntityRepository
{
	
	
	/**
     * Get a player at an index position
     *
     * @return \TS\ApiBundle\Entity\Player 
     */
    /*public function getPlayer($team, $position)
    {
        if (sizeof($team->getPlayerIds()) > $position) {
        	$playerId = 
        
        $em = $this->getEntityManager();
        
        $query = $this->createQueryBuilder('t')
            ->andWhere('t.tournament = :tournament')
		    ->where('p.price > :price')
		    ->setParameter('price', '19.99')
		    ->orderBy('p.price', 'ASC')
		    ->getQuery();
		
		$player = $query->getResult();
	}*/
	
	/**
     * Set a player at an index position
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
   /* public function setPlayer(\TS\ApiBundle\Entity\Player $player, $position)
    {
        
        $query = $this->createQueryBuilder('t')
            ->andWhere('t.tournament = :tournament')
		    ->where('p.price > :price')
		    ->setParameter('price', '19.99')
		    ->orderBy('p.price', 'ASC')
		    ->getQuery();
		
		$products = $query->getResult();

        return $this->getEntityManager()
            ->createQuery('SELECT p FROM TSApiBundle:Team p ORDER BY p.name ASC')
            ->getResult();
            
            return $er->createQueryBuilder('p')
			        	->leftJoin('p.registrationGroup', 't')
			        	->where('t.id = :teamId')
			        	->setParameter('teamId', $teamId)
			        	->orderBy('p.firstName', 'ASC');
        
        if (sizeof($this->players) < $position) {
        	$this->players[$position] = $player;
        }
        
        return $this->players;
    }*/
}
