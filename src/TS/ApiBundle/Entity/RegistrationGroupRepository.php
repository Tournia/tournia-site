<?php

namespace TS\ApiBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * RegistrationGroupRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RegistrationGroupRepository extends EntityRepository
{
	public function getAllRegistrationGroups($tournament)
    {
        return $this->getEntityManager()
            ->createQuery('
                SELECT registrationGroup, players
                FROM TSApiBundle:RegistrationGroup registrationGroup
                LEFT JOIN registrationGroup.players players
                WHERE registrationGroup.tournament = :tournament
                ORDER BY registrationGroup.name ASC'
            )
            ->setParameter('tournament', $tournament)
            ->getResult();
    }

    /**
     * Returns an array with all Players that are contact players for a specific $registrationGroup
     */
    public function getAllContactPlayers($registrationGroup)
    {
        if (is_null($registrationGroup)) {
            return array();
        } else {
            return $this->getEntityManager()
                ->createQuery('
                    SELECT player
                    FROM TSApiBundle:Player player
                    WHERE player.registrationGroup = :registrationGroup AND player.isContactPlayer = true
                    ORDER BY player.firstName ASC'
                )
                ->setParameter('registrationGroup', $registrationGroup)
                ->getResult();
        }
    }

    /**
     * Returns boolean whether a Person is the contact player of a RegistrationGroup
     * @return boolean
     */
    public function isPersonRegistrationGroupContact($person, $registrationGroup)
    {
        $queryResult = $this->getEntityManager()
            ->createQuery('
                SELECT player
                FROM 
                    TSApiBundle:Player player
                WHERE 
                    player.registrationGroup = :registrationGroup AND 
                    player.isContactPlayer = true AND
                    player.person = :person'
            )
            ->setParameter('person', $person)
            ->setParameter('registrationGroup', $registrationGroup)
            ->getResult();
        return sizeof($queryResult) > 0;
    }
}
